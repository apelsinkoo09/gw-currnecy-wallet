API Методы:
1. Регистрация пользователя
    Проверка на уникальность имени и адреса почты
2. Авторизация
    При успешной авторизации возвращается JWT-токен, 
    который будет использоваться для аутентификации последующих запросов.
3. Получения баланса пользователя
    Тоже через JWT токен
4. Пополнение
    Проверить корректность суммы и валюты, обновить в БД данные.
5. Списание
    Проверить достаточность количества средств и корректность суммы.
6. Обмен валюты
    Придумать логику!

gRPC методы:
1. Получение курса валюты
    Возвращает все курсы




    
1. Написание тестов
Тесты для API:
Проверка успешных запросов.
Проверка ошибок (некорректный токен, недостаток средств и т.д.).
Тесты для логики работы с базой данных и gRPC-клиентом.
2. Добавление обработки ошибок
Сейчас некоторые ошибки возвращаются клиенту как есть. Лучше добавить обработку, чтобы API возвращал более понятные сообщения.
3. Реализация регистрации пользователя
Сейчас user_id в логике захардкожен. Реализуем эндпоинт /api/v1/register для создания пользователя:
Валидация данных (логин, пароль).
Хэширование пароля (например, с помощью bcrypt).
4. Добавление конфигураций
Вынести секретный ключ JWT, параметры подключения к базе данных и gRPC-сервису в конфигурационный файл или переменные окружения.
5. Логирование
Добавить логирование для каждого запроса, чтобы легче отлавливать ошибки.
6. Документация API
Описать доступные эндпоинты, их входные и выходные данные. Можно использовать Swagger для автодокументации.
7. Проверка производительности
Настроить стресс-тесты (например, с помощью k6 или wrk) и оптимизировать работу приложения, если будут выявлены узкие места.